extends ../layouts/main-layout.pug

block styles
  link(rel="stylesheet", href="/css/forms.css")
  link(rel="stylesheet", href="/css/product.css")

block content
  main
    if (errorMessage)
      .user-message.user-message--error #{ errorMessage }

    form.product-form(
      action=`/admin/${editing ? 'edit' : 'add'}-product`,
      method="POST",
      enctype="multipart/form-data"
    )
      input(name="_csrf", type="hidden", value=csrfToken)

      .form-control
        label(for="title") Title
        input#title(
          class=validationErrors.find((error) => error.param === "title") ? "invalid" : "",
          type="text",
          name="title",
          value=editing || hasError ? product.title : ""
        )

      //- .form-control
      //-   label(for="imageUrl") Image URL
      //-   input#imageUrl(
      //-     class=validationErrors.find((error) => error.param === "imageUrl") ? "invalid" : "",
      //-     type="text",
      //-     name="imageUrl",
      //-     value=editing || hasError ? product.imageUrl : ""
      //-   ) 

      .form-control
        label(for="image") Image
        input#image(type="file", name="image")

      .form-control
        label(for="price") Price
        input#price(
          class=validationErrors.find((error) => error.param === "price") ? "invalid" : "",
          type="number",
          name="price",
          step="0.01",
          value=editing || hasError ? product.price : ""
        ) 

      .form-control
        label(for="description") Description
        textarea#description(
          class=validationErrors.find((error) => error.param === "description") ? "invalid" : "",
          type="text",
          name="description",
          rows="5"
        ) #{ editing || hasError  ? product.description : "" }

      if editing
        input(type="hidden", name="productId", value=product._id)

      button.btn(type="submit") #{ editing ? 'Update product' : 'Add product' }
